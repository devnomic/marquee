{"version":3,"sources":["../src/index.tsx","../src/lib/utils.ts"],"sourcesContent":["import { HTMLAttributes, ReactNode } from \"react\";\nimport \"./global.css\";\nimport { cn } from \"./lib/utils\";\n\nexport type MarqueeProps = HTMLAttributes<HTMLDivElement> & {\n  children: ReactNode;\n  direction?: \"left\" | \"up\";\n  pauseOnHover?: boolean;\n  reverse?: boolean;\n  fade?: boolean;\n  innerClassName?: string;\n  numberOfCopies?: number;\n};\n\nexport function Marquee({\n  children,\n  direction = \"left\",\n  pauseOnHover = false,\n  reverse = false,\n  fade = false,\n  className,\n  innerClassName,\n  numberOfCopies = 2,\n  ...rest\n}: MarqueeProps) {\n  return (\n    <div\n      className={cn(\n        \"group flex gap-[1rem] overflow-hidden\",\n        direction === \"left\" ? \"flex-row\" : \"flex-col\",\n        className\n      )}\n      style={{\n        maskImage: fade\n          ? `linear-gradient(${\n              direction === \"left\" ? \"to right\" : \"to bottom\"\n            }, transparent 0%, rgba(0, 0, 0, 1.0) 10%, rgba(0, 0, 0, 1.0) 90%, transparent 100%)`\n          : undefined,\n        WebkitMaskImage: fade\n          ? `linear-gradient(${\n              direction === \"left\" ? \"to right\" : \"to bottom\"\n            }, transparent 0%, rgba(0, 0, 0, 1.0) 10%, rgba(0, 0, 0, 1.0) 90%, transparent 100%)`\n          : undefined,\n      }}\n      {...rest}\n    >\n      {Array(numberOfCopies)\n        .fill(0)\n        .map((_, i) => (\n          <div\n            key={i}\n            className={cn(\n              \"flex justify-around gap-[1rem] [--gap:1rem] shrink-0\",\n              direction === \"left\"\n                ? \"animate-marquee-left flex-row\"\n                : \"animate-marquee-up flex-col\",\n              pauseOnHover && \"group-hover:[animation-play-state:paused]\",\n              reverse && \"direction-reverse\",\n              innerClassName\n            )}\n          >\n            {children}\n          </div>\n        ))}\n    </div>\n  );\n}\n","import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,kBAAsC;AACtC,4BAAwB;AAEjB,SAAS,MAAM,QAAsB;AAC1C,aAAO,mCAAQ,kBAAK,MAAM,CAAC;AAC7B;;;AD4CU;AAnCH,SAAS,QAAQ;AAAA,EACtB;AAAA,EACA,YAAY;AAAA,EACZ,eAAe;AAAA,EACf,UAAU;AAAA,EACV,OAAO;AAAA,EACP;AAAA,EACA;AAAA,EACA,iBAAiB;AAAA,EACjB,GAAG;AACL,GAAiB;AACf,SACE;AAAA,IAAC;AAAA;AAAA,MACC,WAAW;AAAA,QACT;AAAA,QACA,cAAc,SAAS,aAAa;AAAA,QACpC;AAAA,MACF;AAAA,MACA,OAAO;AAAA,QACL,WAAW,OACP,mBACE,cAAc,SAAS,aAAa,WACtC,wFACA;AAAA,QACJ,iBAAiB,OACb,mBACE,cAAc,SAAS,aAAa,WACtC,wFACA;AAAA,MACN;AAAA,MACC,GAAG;AAAA,MAEH,gBAAM,cAAc,EAClB,KAAK,CAAC,EACN,IAAI,CAAC,GAAG,MACP;AAAA,QAAC;AAAA;AAAA,UAEC,WAAW;AAAA,YACT;AAAA,YACA,cAAc,SACV,kCACA;AAAA,YACJ,gBAAgB;AAAA,YAChB,WAAW;AAAA,YACX;AAAA,UACF;AAAA,UAEC;AAAA;AAAA,QAXI;AAAA,MAYP,CACD;AAAA;AAAA,EACL;AAEJ;","names":[]}